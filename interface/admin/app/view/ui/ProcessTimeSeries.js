/*
 * File: app/view/ui/ViewerPanel.js
 *
 * This file was generated by Ext Designer version 1.2.3.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */
Ext.define('istsos.view.ui.ProcessTimeSeries',
{
    extend: 'Ext.panel.Panel',
    requires: ['istsos.view.ProcedureChart', 'istsos.view.ProcedureGrid', 'istsos.view.ProcedureMap', 'istsos.view.ProcedureChooser'],
    border: 0,
    layout:
    {
        type: 'border'
    },
    initComponent: function()
    {
        var me = this;
        Ext.applyIf(me,
        {
            items: [
            {
                xtype: 'panel',
                border: 0,
                layout:
                {
                    type: 'border'
                },
                title: '',
                region: 'center',
                items: [
                {
                    xtype: 'panel',
                    height: 300,
                    layout:
                    {
                        type: 'border'
                    },
                    collapsible: true,
                    hideCollapseTool: true,
                    title: '',
                    region: 'north',
                    split: true,
                    items: [
                    {
                        xtype: 'panel',
                        flex: 1,
                        region: 'center',
                        id: 'gridpanel',
                        items: [
                        {
                            border: true,
                            height: 50,
                            maxHeight: 100,
                            maxWidth: 2000,
                            minWidth: 0,
                            bodyBorder: true,
                            bodyPadding: 10,
                            layout:
                            {
                                type: 'hbox'
                            },
                            labelWidth: 35,
                            anchor: '100%',
                            items: [
                            {
                                xtype: 'combobox',
                                id: 'oeCbObservedProperty',
                                name: 'observedproperty',
                                fieldLabel: 'Property',
                                labelWidth: 70,
                                allowBlank: false,
                                displayField: 'name',
                                forceSelection: true,
                                queryMode: 'local',
                                valueField: 'definition',
                                flex: 0.6,
                                margin: '5 5 5 5'
                            },
                            {
                                xtype: 'button',
                                disabled: true,
                                id: 'btnPlot',
                                text: 'Preview',
                                flex: 0.4,
                                margin: '5 5 5 5'
                            }]
                        },
                        {
                            "xtype": "panel",
                            "border": true,
                            "height": 50,
                            "maxHeight": 100,
                            "maxWidth": 2000,
                            "minWidth": 0,
                            "layout": "hbox",
                            "bodyBorder": true,
                            "bodyPadding": 10,
                            "items": [
                            {
                                "xtype": "combobox",
                                store: Ext.create('Ext.data.Store',
                                {
                                    fields: ['abbr', 'name'],
                                    data: [
                                    {
                                        'abbr': 'digital filter',
                                        'name': 'digital filter'
                                    },
                                    {
                                        'abbr': 'exeedance',
                                        'name': 'exeedance'
                                    },
                                    {
                                        'abbr': 'resample',
                                        'name': 'resample'
                                    },
                                    {
                                        'abbr': 'integrate',
                                        'name': 'integrate'
                                    },
                                    {
                                        'abbr': 'compare',
                                        'name': 'compare'
                                    },
                                    {
                                        'abbr': 'subract',
                                        'name': 'subract'
                                    },
                                    {
                                        'abbr': 'integrate',
                                        'name': 'integrate'
                                    },
                                    {
                                        'abbr': 'data values',
                                        'name': 'data values'
                                    },
                                    {
                                        'abbr': 'hydro events',
                                        'name': 'hydro events'
                                    },
                                    {
                                        'abbr': 'hydro indicies',
                                        'name': 'hydro indicies'
                                    },
                                    {
                                        'abbr': 'statistics',
                                        'name': 'statistics'
                                    }]
                                }),
                                "flex": 1,
                                "margins": "",
                                "flex": 2,
                                "itemId": "mycombobox",
                                "margin": 0,
                                "maxHeight": 0,
                                "fieldBodyCls": "",
                                "fieldLabel": "Method",
                                "labelWidth": 50,
                                "matchFieldWidth": false,
                                "fieldLabel": "Methods",
                                "valueField": "abbr",
                                "displayField": "name",
                                queryMode: 'local',
                                forceSelection: true,
                                listeners:
                                {
                                    // render: 'onComboboxRender'
                                    change: function(field, newValue, oldValue)
                                    {
                                        console.log(newValue);
                                    },
                                    scope: this
                                }
                            },
                            {
                                "xtype": "button",
                                "flex": 1,
                                "flex": 2,
                                "height": 30,
                                "margin": "0 5 0 5",
                                "maxHeight": 40,
                                "maxWidth": 150,
                                "width": 100,
                                "text": "Execute "
                            },
                            {
                                "xtype": "button",
                                "flex": 1,
                                "margins": "",
                                "height": 30,
                                "margin": "0 10 10 0",
                                "maxHeight": 40,
                                "maxWidth": 150,
                                "padding": "none",
                                "width": 100,
                                "text": "Save"
                            },
                            {
                                "xtype": "checkboxfield",
                                "flex": 1,
                                "fieldLabel": "",
                                "boxLabel": "over write"
                            }]
                        },
                        {
    "xtype": "panel",
    "viewModel": {
        type: "mypanel"
    },
    "height": 109,
    "width": "none",
    "bodyBorder": true,
    "items": [
        {
            "xtype": "panel",
            "border": false,
            "padding": 5,
            "layout": {
                "type": "hbox",
                "align": "middle"
            },
            "items": [
                {
                    "xtype": "textfield",
                    "id": "edittextFrequency",
                    "margin": "0 0 10 10",
                    "width": "",
                    "fieldLabel": "Frequency",
                    "labelWidth": 70
                },
                {
                    "xtype": "combobox",
                    "margins": "",
                    "id": "comboxSmapling",
                    "margin": "0 0 10 10",
                    "fieldLabel": "Sampling Method",
                    "labelWidth": 120
                }
            ]
        },
        {
            "xtype": "panel",
            "border": false,
            "margin": 10,
            "layout": {
                "type": "hbox",
                "align": "middle"
            },
            "items": [
                {
                    "xtype": "combobox",
                    "id": "comboxFill",
                    "margin": "0 5 5 0",
                    "fieldLabel": "Fill",
                    "labelWidth": 30
                },
                {
                    "xtype": "combobox",
                    "id": "comboxLimit",
                    "margin": "0 5 5 0",
                    "fieldLabel": "Limit",
                    "labelWidth": 40,
                },
                {
                    "xtype": "combobox",
                    "id": "comboxHowquality",
                    "margin": "0 5 5 0",
                    "fieldLabel": "How Quality",
                    "labelWidth": 80
                }
            ]
        }
    ]
}]
                    },
                    {
                        xtype: 'panel',
                        flex: 1,
                        region: 'east',
                        split: true,
                        id: 'proceduremap',
                        bodyCls: 'viewerChart',
                        width: 150,
                        collapsible: true,
                        hideCollapseTool: true
                    }]
                },
                {
                    xtype: 'panel',
                    border: 0,
                    id: 'chartpanel',
                    layout:
                    {
                        type: 'fit'
                    },
                    bodyCls: 'viewerChart',
                    region: 'center'
                },
                {
                    xtype: 'textarea',
                    fieldLabel: 'History',
                    region: 'south'
                },
                {
                    // xtype: 'textarea',
                    // fieldLabel: 'History',
                    // region: 'center'
                }]
            },
            {
                xtype: 'panel',
                width: 300,
                layout:
                {
                    type: 'fit'
                },
                title: '',
                region: 'west',
                items: [
                {
                    xtype: 'procedurechooser',
                    border: 0,
                    id: 'pchoose'
                }]
            }]
        });
        me.callParent(arguments);
    }
});